{{ define "get_converters.tmpl" }}
{{ template "header.tmpl" .title}}

<div class="container">

  <div class="box bg-light w-100 p-5 border border-1 rounded mt-5">
   <h2 class="mb-3">Price Calculator</h2> 
  <div class="row">
    <div class="input-group  mb-3">
    <div class="input-group-prepend">
      <span for="cc-number" class="input-group-text">amount</label>
     </div>
      <input type="number"  step="any" class="form-control" id="number1" placeholder="0" >
    </div>
    <div class="input-group mb-3">
      <div class="input-group-prepend">
      <span for="country" class="input-group-text">From</label>
      </div>
      <select class="form-select currency1" id="currency1" onchange="updatevalue()" >
      </select>
    </div>
    <div class="input-group  mb-3">
      <div class="input-group-prepend">
      <span for="country" class="input-group-text">To</label>
      </div>
    <select class="form-select currency1" id="currency2" onchange="updatevalue()">
    </select>
  </div>
  <div class="input-group  mb-3">
    <div class="input-group-prepend">
      <span for="cc-number" class="input-group-text">amount</label>
     </div>
    <input type="text" class="form-control" id="output1" placeholder="0" readonly>
  </div>

</div>
</div>
</div>
<!--
<script>
    const select = document.querySelectorAll('.currency');
    const number = document.getElementById("number");
    const output = document.getElementById("output");


    fetch('https://api.frankfurter.app/currencies').then((data) => data.json())
      .then((data) => {
        display(data);
      });


    function display(data) {
      const entries = Object.entries(data);
      for (var i = 0; i < entries.length; i++) {
        select[0].innerHTML += `<option value="${entries[i][0]}">${entries[i][0]} : ${entries[i][1]}</option>`;
        select[1].innerHTML += `<option value="${entries[i][0]}">${entries[i][0]} : ${entries[i][1]}</option>`;
      }
    }



    function updatevalue() {
      let currency1 = select[0].value;
      let currency2 = select[1].value;

      let value = number.value;


      if (currency1 != currency2) {
        convert(currency1, currency2, value);
      } else {
        alert("Choose Diffrent Currency");
      }
    }


    function convertOriginal(currency1, currency2, value) {
      const host = "api.frankfurter.app";
     //https://api.frankfurter.app/latest?amount=10&from=ARS&to=EUR
      fetch(`https://${host}/latest?amount=${value}&from=${currency1}&to=${currency2}`)
        .then((val) => val.json())
        .then((val) => {
          console.log(Object.values(val.rates)[0]);
          output.value = Object.values(val.rates)[0];
        });

    }
    //{"amount":10.0,"base":"BRL","date":"2024-12-06","rates":{"AUD":2.5975}}
    function convert(currency1, currency2, value) {
      const host = "https://api.coingecko.com/";
      
      
      fetch(`https://${host}/api/v3/simple/price?amount=${value}&ids=${currency1}&vs_currencies=${currency2}`)
        .then((val) => val.json())
        .then((val) => {
          //console.log(Object.values(val.rates)[0]);
          output.value = Object.values(val.rates)[0];
        });

    }


</script>
-->
<script>
  const select = document.querySelectorAll('.currency1');
  const number = document.getElementById("number1");
  const output = document.getElementById("output1");
//'x-cg-pro-api-key': 'CG-4YbsrgnB5a45UdF9gYyqXJfi',
  const options = {
    method: 'GET',
    headers: {
      accept: 'application/json',
      
    },
  };
  let todos = document.getElementById('currency1');
  let todos2 = document.getElementById('currency2');
  
/*
   fetch('https://api.coingecko.com/api/v3/simple/supported_vs_currencies', options)
         .then(response => response.json())
         .then(data => {
            currenciesList = Object.values(data);
            currenciesListArray = data;
          })
        .then(() => {
          console.log(currenciesListArray); // value of outsideVariable is now available
          console.log(typeof currenciesListArray); // value of outsideVariable is now available

          return fetch('https://api.coingecko.com/api/v3/coins/list', options);    
          })
          .then(data => data.json())
          .then(data => {
              data.forEach(todo => {
                let option = new Option( todo.id+ ' : ' +  todo.name, todo.id);
                todos.add(option);
                
                    if(Object.values(currenciesListArray).indexOf(todo.id) !== -1){
                      let option2 = new Option(todo.id+ ' : ' +  todo.name, todo.symbol);
                      todos2.add(option2);
                      console.log("entro adentro dle fetch");
                      //alert("Value exists!")
                    } 
              })
          });
*/
       
       fetch('https://api.coingecko.com/api/v3/coins/list', options)   
          .then(data => data.json())
          .then(data => {
              data.forEach(todo => {
                let option = new Option( todo.id+ ' : ' +  todo.name, todo.id);
                todos.add(option);
              })
          });

      fetch('https://api.coingecko.com/api/v3/simple/supported_vs_currencies', options)
        .then(data => data.json())
        .then(data => {
            data.forEach(todo => {
            const entries = JSON.parse(JSON.stringify(todo)); 
            let option2 = new Option(entries,entries);
            //console.log(entries);
            todos2.add(option2);
          });
        });


  fetch('https://api.frankfurter.app/currencies')
    .then((data) => data.json())
    .then((data) => {
     // display1(data);
     console.log(data)
    });


  function display1(data) {
    const entries = Object.entries(data);
    for (var i = 0; i < entries.length; i++) {
      select[0].innerHTML += `<option value="${entries[i][0]}">${entries[i][0]} : ${entries[i][1]}</option>`;
      select[1].innerHTML += `<option value="${entries[i][0]}">${entries[i][0]} : ${entries[i][1]}</option>`;
    }
  }



  function updatevalue() {
    let currency1 = select[0].value;
    let currency2 = select[1].value;

    let value = number.value;


    if (currency1 != currency2) {
      convert1(currency1, currency2, value);
    } else {
      alert("Choose Diffrent Currency");
    }
  }


  function convert11(currency1, currency2, value) {
    const host = "api.frankfurter.app";

    fetch(`https://${host}/latest?amount=${value}&from=${currency1}&to=${currency2}`)
      .then((val) => val.json())
      .then((val) => {
       // console.log(Object.values(val.rates)[0]);
        output.value = Object.values(val.rates)[0];
      });

  }

    //{"amount":10.0,"base":"BRL","date":"2024-12-06","rates":{"AUD":2.5975}}
    function convert1(currency1, currency2, value) {
      //fetch(`https://api.coingecko.com/api/v3/simple/price?amount=${value}&ids=${currency1}&vs_currencies=${currency2}`)
      fetch(`http://localhost:8080/prices?amount=${value}&ids=${currency1}&vs_currencies=${currency2}`)
        .then((val) => val.json())
        .then((val) => {
          //console.log(Object.values(val.rates)[0]);
          output.value = Object.values(val.rates)[0];
        });

    }

</script>




{{ template "footer.tmpl" .}}
{{ end }}